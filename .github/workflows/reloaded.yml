# Script to build and publish a Reloaded Mod.
# by Sewer56

# Produces: 
#   - Build to Upload to GameBanana
#   - Build to Upload to GitHub
#   - Build to Upload to NuGet
#   - Changelog

# When pushing a tag
#   - Upload to GitHub Releases
#   - Upload to Reloaded NuGet Repository (if GitHub Secret RELOADED_NUGET_KEY is specified) 

name: Build and Publish Reloaded Mod

on:
  push:
    branches: [ master ]
    tags:
      - '*'
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env: 
  PUBLISH_COMMON_PATH: ./Publish/ToUpload/

  PUBLISH_GAMEBANANA_UE_PATH: ./Publish/ToUpload/UnrealEssentials/GameBanana
  PUBLISH_GITHUB_UE_PATH: ./Publish/ToUpload/UnrealEssentials/Generic
  PUBLISH_NUGET_UE_PATH: ./Publish/ToUpload/UnrealEssentials/NuGet

  PUBLISH_GAMEBANANA_UTOC_PATH: ./Publish/ToUpload/UTOC.Stream.Emulator/GameBanana
  PUBLISH_GITHUB_UTOC_PATH: ./Publish/ToUpload/UTOC.Stream.Emulator/Generic
  PUBLISH_NUGET_UTOC_PATH: ./Publish/ToUpload/UTOC.Stream.Emulator/NuGet
  
  PUBLISH_INTERFACE_PATH: ./Publish/Interface
  NUGET_URL: https://api.nuget.org/v3/index.json

  PUBLISH_CHANGELOG_PATH: ./CHANGELOG.md
  PUBLISH_PATH: ./Publish
  
  RELOADEDIIMODS: .

  # Default value is official Reloaded package server.  
  RELOAD_NUGET_URL: http://packages.sewer56.moe:5000/v3/index.json
  
  IS_RELEASE: ${{ startsWith(github.ref, 'refs/tags/') }}
  RELEASE_TAG: ${{ github.ref_name }}

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh
    
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: 'recursive'
        
    - name: Setup .NET Core SDK (5.0)
      uses: actions/setup-dotnet@v1.8.2
      with:
        dotnet-version: 5.0.x
        
    - name: Setup .NET Core SDK (6.0)
      uses: actions/setup-dotnet@v1.8.2
      with:
        dotnet-version: 6.0.x

    - name: Setup .NET Core SDK (7.0)
      uses: actions/setup-dotnet@v1.8.2
      with:
        dotnet-version: 7.0.x

    - name: Setup .NET Core SDK (8.0)
      uses: actions/setup-dotnet@v1.8.2
      with:
        dotnet-version: 8.0.x

    - name: Setup Rust
      uses: hecrj/setup-rust-action@v2.0.1
      with:
        rust-version: nightly
        components: rust-src
        targets: x86_64-pc-windows-msvc
      
    - name: Build
      run: ./PublishAll.ps1
      
    - name: Upload GitHub Release Artifact
      uses: actions/upload-artifact@v4
      with:
        # Artifact name
        name: GitHub Release
        # A file, directory or wildcard pattern that describes what to upload
        path: |
          ${{ env.PUBLISH_GITHUB_UE_PATH }}/*
          ${{ env.PUBLISH_GITHUB_UTOC_PATH }}/*
          
    - name: Upload GameBanana Release Artifact
      uses: actions/upload-artifact@v4
      with:
        # Artifact name
        name: GameBanana Release
        # A file, directory or wildcard pattern that describes what to upload
        path: |
          ${{ env.PUBLISH_GAMEBANANA_UE_PATH }}/*
          ${{ env.PUBLISH_GAMEBANANA_UTOC_PATH }}/*
        
    - name: Upload NuGet Release Artifact
      uses: actions/upload-artifact@v4
      with:
        # Artifact name
        name: NuGet Release
        # A file, directory or wildcard pattern that describes what to upload
        path: |
          ${{ env.PUBLISH_NUGET_UE_PATH }}/*
          ${{ env.PUBLISH_NUGET_UTOC_PATH }}/*
        
    - name: Upload Changelog Artifact
      uses: actions/upload-artifact@v4
      with:
        # Artifact name
        name: Changelog
        # A file, directory or wildcard pattern that describes what to upload
        path: ${{ env.PUBLISH_CHANGELOG_PATH }}
        retention-days: 0
        
    - name: Upload Interfaces Artifact
      uses: actions/upload-artifact@v4
      with:
        # Artifact name
        name: Interfaces
        # A file, directory or wildcard pattern that describes what to upload
        path: ${{ env.PUBLISH_INTERFACE_PATH }}
        retention-days: 0
    
    - name: Upload to GitHub Releases (on Tag)
      uses: softprops/action-gh-release@v0.1.14
      if: env.IS_RELEASE == 'true'
      with:
        # Path to load note-worthy description of changes in release from
        body_path: ${{ env.PUBLISH_CHANGELOG_PATH }}
        # Newline-delimited list of path globs for asset files to upload
        files: |
          ${{ env.PUBLISH_GITHUB_UE_PATH }}/*
          ${{ env.PUBLISH_GITHUB_UTOC_PATH }}/*
        
    - name: Push to NuGet (on Tag)
      env: 
        UE_NUGET_KEY: ${{ secrets.RELOADED_UE_NUGET_KEY }}
        UTOC_NUGET_KEY: ${{ secrets.RELOADED_UTOC_NUGET_KEY }}
        INTERFACE_NUGET_KEY: ${{ secrets.INTERFACE_NUGET_KEY }}
      if: env.IS_RELEASE == 'true'
      run: |
        $items = Get-ChildItem -Path "$env:PUBLISH_NUGET_UE_PATH" -Include "*.nupkg" -Recurse
        Foreach ($item in $items)
        {
            Write-Host "Pushing $item"
            dotnet nuget push "$item" -k "$env:UE_NUGET_KEY" -s "$env:RELOAD_NUGET_URL" --skip-duplicate
        }

        $items = Get-ChildItem -Path "$env:PUBLISH_NUGET_UTOC_PATH" -Include "*.nupkg" -Recurse
        Foreach ($item in $items)
        {
            Write-Host "Pushing $item"
            dotnet nuget push "$item" -k "$env:UTOC_NUGET_KEY" -s "$env:RELOAD_NUGET_URL" --skip-duplicate
        }

        $items = Get-ChildItem -Path "$env:PUBLISH_INTERFACE_PATH" -Include "*.nupkg" -Recurse
        Foreach ($item in $items)
        {
            Write-Host "Pushing $item"
            dotnet nuget push "$item" -k "$env:INTERFACE_NUGET_KEY" -s "$env:NUGET_URL" --skip-duplicate
        }
